#!/usr/bin/env sh
set -e

check=
staged=
while [ "$1" != "" ]; do
      case $1 in
            -c | --check )    check=1
                              ;;

            --staged )        staged=1
                              check=1
                              ;;

            * )               echo "I don't know this option"
                              exit 1
      esac
      shift
done


if [ -z ${check} ];  then
      echo "linting..."
else
      echo "checking..."
fi

PREFIX=
# Collect the sources to process.
if [ -n "${staged}" ]; then
      PREFIX=$(mktemp -d)/
      git diff --cached --name-only --diff-filter=ACM -z \
            | git checkout-index --prefix="$PREFIX" -z --stdin
fi

# This piece of work is necessary because prettier fails if the patterns
# that it receives as arguments do not match any files.
function node_check_pattern () {
      NODE_PATH=/usr/lib/node_modules/ \
            node -e 'process.exit(!require("globby").sync(process.argv.slice(1)).length);' \
                  "$@"
}


if [ -z "$LINT_FILE_DOCKER" ]
then
      echo "\$LINT_FILE_DOCKER is not set. Skipping..."
else
      echo "LINT: DOCKER"
      hadolint $LINT_FILE_DOCKER
fi

if [ -z "$LINT_FOLDER_PYTHON" ]
then
      echo "\$LINT_FOLDER_PYTHON is not set. Skipping..."
else
      echo "LINT: ISORT"
      if [ -z ${check} ];  then
            ISORT_OPTS=--apply
      else
            ISORT_OPTS="--check-only --diff"
      fi
      isort \
            --settings-path=/app \
            --recursive \
            --line-width=79 \
            --lines-after-imports=2  \
            --lines-between-types=0 \
            --trailing-comma \
            --atomic \
            --order-by-type \
            --use-parentheses \
            --dont-skip=__init__.py \
            --multi-line=3 \
            $ISORT_OPTS \
            "$PREFIX$LINT_FOLDER_PYTHON"

      echo "LINT: BLACK"
      BLACK_OPTS=
      if [ -z ${check} ];  then
            BLACK_OPTS=
      else
            BLACK_OPTS=--check
      fi
      find "$PREFIX$LINT_FOLDER_PYTHON" -name '*.py' \
            | grep -v with_errors \
            | xargs black --line-length=79 --safe $BLACK_OPTS

      echo "LINT: AUTOFLAKE"
      if [ -z ${check} ];  then
            find "$PREFIX$LINT_FOLDER_PYTHON" -name '*.py' \
                  | xargs autoflake --in-place --remove-unused-variables
      else
            echo "not running autoflake on check"
      fi

      echo "LINT: FLAKE8"
      flake8 "$PREFIX$LINT_FOLDER_PYTHON" --ignore=E501,E722,E402,W503,E203
fi

if [ -z "$LINT_FOLDER_SCSS" ]
then
      echo "\$LINT_FOLDER_SCSS is not set. Skipping..."
elif node_check_pattern "$PREFIX$LINT_FOLDER_SCSS"; then
      echo "LINT: PRETTIER: SCSS"
      PRETTIER_OPTS=--write
      if [ -n ${check} ];  then
            PRETTIER_OPTS=--check
      fi
      prettier \
            --parser scss \
            --double-quote \
            --trailing-comma es5 \
            --jsx-bracket-same-line \
            --tab-width 4 \
            --print-width 120 \
            $PRETTIER_OPTS \
            "$PREFIX$LINT_FOLDER_SCSS"
else
      echo "$PREFIX$LINT_FOLDER_SCSS did not match any files, skipping..."
fi

if [ -z "$LINT_FOLDER_JS" ]
then
      echo "\$LINT_FOLDER_JS is not set. Skipping..."
elif node_check_pattern "$PREFIX$LINT_FOLDER_JS"; then
      echo "LINT: PRETTIER: JS"
      PRETTIER_OPTS=--write
      if [ -n ${check} ];  then
            PRETTIER_OPTS=--check
      fi
      prettier \
            --parser flow \
            --single-quote \
            --trailing-comma es5 \
            --jsx-bracket-same-line \
            --tab-width 4 \
            --print-width 120 \
            $PRETTIER_OPTS \
            "$PREFIX$LINT_FOLDER_JS"
else
      echo "$PREFIX$LINT_FOLDER_JS did not match any files, skipping..."
fi
